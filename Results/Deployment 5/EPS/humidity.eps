%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.8.5 (Build 12F37) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1440 800
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1440 800
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: VCCAZN+Helvetica
%!FontType1-1.0: VCCAZN+Helvetica 1.0000.0.0000
14 dict begin/FontName /VCCAZN+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /two put
dup 35 /four put
dup 36 /six put
dup 37 /eight put
dup 38 /one put
dup 39 /five put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<







00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/two 3 def
/four 4 def
/five 5 def
/six 6 def
/eight 7 def
/u10FB 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4208844 def
currentdict currentfile eexec


0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/VCCAZN+Helvetica cguidfix
/F1.1/VCCAZN+Helvetica renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 1440 800 rc
0 0 m
80 0 l
80 800 l
0 800 l
h
f
0 0 m
1440 0 l
1440 80 l
0 80 l
h
f
0 790 m
1440 790 l
1440 800 l
0 800 l
h
f
1430 0 m
1440 0 l
1440 800 l
1430 800 l
h
f
80 80 m
1430 80 l
1430 790 l
80 790 l
h
f
2 w
0 sc
99.424461 80 m
99.424461 90 l
S
/F1.1[ 14 0 0 14 0 0]sf
95.531395 61 m
(!)s
252.77547 80 m
252.77547 90 l
S
244.98933 61 m
("!)[ 7.786133 0.000000 ] xS
406.12646 80 m
406.12646 90 l
S
398.34033 61 m
(#!)[ 7.786133 0.000000 ] xS
559.47748 80 m
559.47748 90 l
S
551.69135 61 m
($!)[ 7.786133 0.000000 ] xS
712.82849 80 m
712.82849 90 l
S
705.04236 61 m
(%!)[ 7.786133 0.000000 ] xS
866.1795 80 m
866.1795 90 l
S
854.50031 61 m
(&!!)[ 7.786133 7.786133 0.000000 ] xS
1019.5305 80 m
1019.5305 90 l
S
1007.8513 61 m
(&"!)[ 7.786133 7.786133 0.000000 ] xS
1172.8815 80 m
1172.8815 90 l
S
1161.2023 61 m
(&#!)[ 7.786133 7.786133 0.000000 ] xS
1326.2325 80 m
1326.2325 90 l
S
1314.5533 61 m
(&$!)[ 7.786133 7.786133 0.000000 ] xS
1 w
137.76221 80 m
137.76221 85 l
S
176.09996 80 m
176.09996 85 l
S
214.43771 80 m
214.43771 85 l
S
291.11322 80 m
291.11322 85 l
S
329.45096 80 m
329.45096 85 l
S
367.78873 80 m
367.78873 85 l
S
444.4642 80 m
444.4642 85 l
S
482.80197 80 m
482.80197 85 l
S
521.13971 80 m
521.13971 85 l
S
597.81525 80 m
597.81525 85 l
S
636.15295 80 m
636.15295 85 l
S
674.49072 80 m
674.49072 85 l
S
751.1662 80 m
751.1662 85 l
S
789.50397 80 m
789.50397 85 l
S
827.84174 80 m
827.84174 85 l
S
904.51721 80 m
904.51721 85 l
S
942.85498 80 m
942.85498 85 l
S
981.19275 80 m
981.19275 85 l
S
1057.8683 80 m
1057.8683 85 l
S
1096.2059 80 m
1096.2059 85 l
S
1134.5437 80 m
1134.5437 85 l
S
1211.2192 80 m
1211.2192 85 l
S
1249.557 80 m
1249.557 85 l
S
1287.8948 80 m
1287.8948 85 l
S
1364.5702 80 m
1364.5702 85 l
S
1402.908 80 m
1402.908 85 l
S
2 w
80 121.87865 m
90 121.87865 l
S
56.427734 116.87865 m
(#%)[ 7.786133 0.000000 ] xS
80 220.21564 m
90 220.21564 l
S
56.427734 215.21564 m
('!)[ 7.786133 0.000000 ] xS
80 318.55264 m
90 318.55264 l
S
56.427734 313.55264 m
('")[ 7.786133 0.000000 ] xS
80 416.88962 m
90 416.88962 l
S
56.427734 411.88962 m
('#)[ 7.786133 0.000000 ] xS
80 515.22662 m
90 515.22662 l
S
56.427734 510.22659 m
('$)[ 7.786133 0.000000 ] xS
80 613.5636 m
90 613.5636 l
S
56.427734 608.5636 m
('%)[ 7.786133 0.000000 ] xS
80 711.90057 m
90 711.90057 l
S
56.427734 706.90057 m
($!)[ 7.786133 0.000000 ] xS
1 w
80 97.294403 m
85 97.294403 l
S
80 146.46289 m
85 146.46289 l
S
80 171.04715 m
85 171.04715 l
S
80 195.63139 m
85 195.63139 l
S
80 244.79988 m
85 244.79988 l
S
80 269.38412 m
85 269.38412 l
S
80 293.96838 m
85 293.96838 l
S
80 343.13687 m
85 343.13687 l
S
80 367.72113 m
85 367.72113 l
S
80 392.30536 m
85 392.30536 l
S
80 441.47388 m
85 441.47388 l
S
80 466.05811 m
85 466.05811 l
S
80 490.64236 m
85 490.64236 l
S
80 539.81085 m
85 539.81085 l
S
80 564.39508 m
85 564.39508 l
S
80 588.97937 m
85 588.97937 l
S
80 638.14783 m
85 638.14783 l
S
80 662.73212 m
85 662.73212 l
S
80 687.31635 m
85 687.31635 l
S
80 736.48486 m
85 736.48486 l
S
80 761.06909 m
85 761.06909 l
S
80 785.65332 m
85 785.65332 l
S
Q
1 J
1 j
0.60000002 i
0 sc
q
80 80 1350 710 rc
99.424461 192.0257 m
107.09201 153.83818 l
114.75956 109.58652 l
122.42711 115.32285 l
130.09467 144.00449 l
137.76221 157.93555 l
145.42976 119.09243 l
153.09731 158.755 l
160.76486 141.21826 l
168.43242 135.31804 l
176.09996 118.60073 l
183.76752 118.27297 l
191.43506 105.81693 l
199.10262 128.43445 l
206.77016 154.32988 l
214.43771 126.7955 l
222.10527 98.933334 l
229.77281 120.40359 l
237.44037 127.12329 l
245.10791 155.47713 l
252.77547 136.46532 l
260.44302 108.93095 l
268.11057 135.97363 l
275.77811 141.05438 l
283.44568 130.56509 l
291.11322 117.61739 l
298.78076 128.43443 l
306.4483 147.28238 l
314.11588 162.5246 l
321.78342 148.75742 l
329.45096 147.93794 l
337.11853 155.14932 l
344.78607 181.53644 l
352.45361 157.77165 l
360.12115 148.10185 l
367.78873 134.33467 l
375.45627 129.58174 l
383.12381 127.28719 l
390.79138 141.70995 l
398.45892 159.08282 l
406.12646 151.70757 l
413.79401 181.04474 l
421.46158 193.50076 l
429.12912 174.48892 l
436.79666 191.20624 l
444.4642 167.60536 l
452.13177 148.92133 l
459.79932 151.05197 l
467.46686 141.70995 l
475.13443 155.47711 l
482.80197 170.22768 l
490.46951 162.68851 l
498.13705 159.90231 l
505.80463 137.9404 l
513.47217 109.09483 l
521.13971 103.03072 l
528.80725 143.34889 l
536.47479 149.5769 l
544.1424 166.94977 l
551.80994 187.60056 l
559.47748 209.39857 l
567.14502 204.80951 l
574.81256 208.57912 l
582.4801 220.70734 l
590.14764 223.98521 l
597.81525 235.6218 l
605.48279 274.95657 l
613.15033 297.08243 l
620.81787 274.30096 l
628.48541 267.08963 l
636.15295 266.27014 l
643.8205 268.23691 l
651.4881 274.46487 l
659.15564 348.70929 l
666.82318 397.7139 l
674.49072 459.01062 l
682.15826 487.52835 l
689.82581 458.02725 l
697.49335 417.5452 l
705.16095 388.69968 l
712.82849 364.27933 l
720.49603 387.88022 l
728.16357 475.07236 l
735.83112 495.23141 l
743.49866 529.15765 l
751.1662 458.68283 l
758.8338 431.31238 l
766.50134 452.29089 l
774.16888 503.26227 l
781.83643 542.59705 l
789.50397 544.23602 l
797.17151 523.74915 l
804.83905 479.98917 l
812.50665 475.89182 l
820.17419 520.96289 l
827.84174 482.9393 l
835.50928 451.30756 l
843.17682 454.58545 l
850.84436 454.74939 l
858.5119 472.61389 l
866.1795 446.55463 l
873.84705 469.99161 l
881.51459 503.09839 l
889.18213 474.2529 l
896.84967 470.3194 l
904.51721 546.53052 l
912.18475 543.25262 l
919.85236 463.92746 l
927.5199 470.97495 l
935.18744 488.67563 l
942.85498 451.14368 l
950.52252 425.90384 l
958.19006 412.30054 l
965.8576 375.58804 l
973.52521 364.27933 l
981.19275 362.80426 l
988.86029 376.89923 l
996.52783 361.00143 l
1004.1954 376.40756 l
1011.8629 430.32901 l
1019.5305 455.24103 l
1027.198 452.29095 l
1034.8656 461.30515 l
1042.5331 417.70908 l
1050.2007 372.47406 l
1057.8683 348.21759 l
1065.5358 357.23184 l
1073.2034 358.05133 l
1080.8708 355.75677 l
1088.5385 409.02264 l
1096.2059 377.22705 l
1103.8735 322.15829 l
1111.5411 326.0918 l
1119.2086 280.6929 l
1126.8762 249.06116 l
1134.5437 284.13467 l
1142.2113 356.57623 l
1149.8788 353.13446 l
1157.5464 336.41721 l
1165.214 338.38391 l
1172.8815 290.03491 l
1180.5491 334.61435 l
1188.2166 461.14127 l
1195.8842 510.80145 l
1203.5516 474.08896 l
1211.2192 422.78986 l
1218.8868 389.19135 l
1226.5543 334.12265 l
1234.2219 415.90625 l
1241.8894 479.00583 l
1249.557 483.10318 l
1257.2245 465.56641 l
1264.8921 413.93951 l
1272.5597 391.15811 l
1280.2272 561.44501 l
1287.8948 648.9649 l
1295.5623 738.4516 l
1303.2299 771.06665 l
1310.8973 695.67499 l
1318.5649 576.03168 l
1326.2325 490.47849 l
1333.9 471.46664 l
1341.5676 449.34085 l
1349.2351 388.86359 l
1356.9027 368.54062 l
1364.5702 319.04431 l
1372.2378 279.21783 l
1379.9054 261.68109 l
1387.5729 275.61215 l
1395.2405 265.28677 l
1402.908 388.0441 l
1410.5756 359.85416 l
S
Q
2 w
0 J
0 j
0 i
q
0 0 1440 800 rc
80 80 m
1430 80 l
1430 790 l
80 790 l
h
S
ep
end
%%Trailer
%%EOF
