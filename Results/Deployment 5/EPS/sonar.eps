%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.8.5 (Build 12F37) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1440 800
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1440 800
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: YCRQLX+Helvetica
%!FontType1-1.0: YCRQLX+Helvetica 1.0000.0.0000
14 dict begin/FontName /YCRQLX+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /two put
dup 35 /four put
dup 36 /six put
dup 37 /eight put
dup 38 /one put
dup 39 /five put
dup 40 /three put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<







00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/two 3 def
/three 4 def
/four 5 def
/five 6 def
/six 7 def
/eight 8 def
/u10FB 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4208844 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B4F1C51BADFF3495C2924BE71970B75EDF2A199B50F98194813A33F63946432A100A72F0700E471C6AECB1F3AE72601F4FBA141E6DAA154933D47293681E1AF19EB09BC4B0B8EA08CB9CABB31741A44CF2EAB20ADC8CCB10041E91B1C2061973DD865338141E9ADE8F074BAAEC6560F5553DC976D45543D5D98991CA6E30EBE4E7338CB492FCF0EC6CC3F991B174D273CB99E63037A2E9C28B3D455FD2555EBDAE1351EF00D433551C425EB9662B90175C2A295C93972984C4D5D3A74F226C8FDDB293020BD5B67F7C49395C679E4E0E39777A50B4F1A703368461248D45C4050A139D876470DCCEB661FAAA50A17BC0D23B6CD035CFC7453904E6189BBFE21AFA60FE085B4234E679E9615003E932DA41494309BFD422730825529476645814282CCA3A0D44304EE8C902CE84B84D2D2940405B62B95BAC6077A928BE60F4CBDFA60EA1FFFFF4CA7D3D94E65581A2C75025B801A579AD1450124A2615E22317A6BA780EEAEF760883A18A0ADA9E612149C2BA529615C8A002D0B2F57E7E06F9E15D324F9434405BF59BFD55CD7EE66525454D46245C4B010A98D300D323DE2ED6F9CAA0F8379C027A6F817F5D0D1370A5F192D46DE21BDAF3C1037F31F8E24E6D94556389480529C2F9CB2BF8C5748F1E81402B8CA1270B0BDA702FDC1BDCCFAC035276087E41AE59B42D57B27F4F38332814CBC80E98B606338A96C26F35820E25457FE0FE3BDB4B4D282C4684DF94F407C599BD83B880EDBD5C55E8D64380

9C03C8DB3DC6157F90A87D19499C16F56F2C2B9F37EA97C171A644F61C35C25143536276BFB3ED4B7EF53C04FAB1306B3028E363DCF70DE8AB546CD2EB02B8A6A08622D687AB8D5425970571C55E643D279A9B81BB7B04E1A4A359744D1B58F59BDF27B0FD1ECB6B91D529D7AC2777FA76B1CD9AE001EE23C379EF1DD447A66C90EFFC2D0B1FF9E37B3996384A7C80C454C0DA19C6F6B3E842A5EFE1E61EF776FB25
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/YCRQLX+Helvetica cguidfix
/F1.1/YCRQLX+Helvetica renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 1440 800 rc
0 0 m
80 0 l
80 800 l
0 800 l
h
f
0 0 m
1440 0 l
1440 80 l
0 80 l
h
f
0 790 m
1440 790 l
1440 800 l
0 800 l
h
f
1430 0 m
1440 0 l
1440 800 l
1430 800 l
h
f
80 80 m
1430 80 l
1430 790 l
80 790 l
h
f
2 w
0 sc
99.424461 80 m
99.424461 90 l
S
/F1.1[ 14 0 0 14 0 0]sf
95.531395 61 m
(!)s
252.77547 80 m
252.77547 90 l
S
244.98933 61 m
("!)[ 7.786133 0.000000 ] xS
406.12646 80 m
406.12646 90 l
S
398.34033 61 m
(#!)[ 7.786133 0.000000 ] xS
559.47748 80 m
559.47748 90 l
S
551.69135 61 m
($!)[ 7.786133 0.000000 ] xS
712.82849 80 m
712.82849 90 l
S
705.04236 61 m
(%!)[ 7.786133 0.000000 ] xS
866.1795 80 m
866.1795 90 l
S
854.50031 61 m
(&!!)[ 7.786133 7.786133 0.000000 ] xS
1019.5305 80 m
1019.5305 90 l
S
1007.8513 61 m
(&"!)[ 7.786133 7.786133 0.000000 ] xS
1172.8815 80 m
1172.8815 90 l
S
1161.2023 61 m
(&#!)[ 7.786133 7.786133 0.000000 ] xS
1326.2325 80 m
1326.2325 90 l
S
1314.5533 61 m
(&$!)[ 7.786133 7.786133 0.000000 ] xS
1 w
137.76221 80 m
137.76221 85 l
S
176.09996 80 m
176.09996 85 l
S
214.43771 80 m
214.43771 85 l
S
291.11322 80 m
291.11322 85 l
S
329.45096 80 m
329.45096 85 l
S
367.78873 80 m
367.78873 85 l
S
444.4642 80 m
444.4642 85 l
S
482.80197 80 m
482.80197 85 l
S
521.13971 80 m
521.13971 85 l
S
597.81525 80 m
597.81525 85 l
S
636.15295 80 m
636.15295 85 l
S
674.49072 80 m
674.49072 85 l
S
751.1662 80 m
751.1662 85 l
S
789.50397 80 m
789.50397 85 l
S
827.84174 80 m
827.84174 85 l
S
904.51721 80 m
904.51721 85 l
S
942.85498 80 m
942.85498 85 l
S
981.19275 80 m
981.19275 85 l
S
1057.8683 80 m
1057.8683 85 l
S
1096.2059 80 m
1096.2059 85 l
S
1134.5437 80 m
1134.5437 85 l
S
1211.2192 80 m
1211.2192 85 l
S
1249.557 80 m
1249.557 85 l
S
1287.8948 80 m
1287.8948 85 l
S
1364.5702 80 m
1364.5702 85 l
S
1402.908 80 m
1402.908 85 l
S
2 w
80 87.68708 m
90 87.68708 l
S
64.213867 82.68708 m
(!)s
80 198.79433 m
90 198.79433 l
S
56.427734 193.79433 m
('!)[ 7.786133 0.000000 ] xS
80 309.90158 m
90 309.90158 l
S
48.641602 304.90158 m
(&!!)[ 7.786133 7.786133 0.000000 ] xS
80 421.00882 m
90 421.00882 l
S
48.641602 416.00882 m
(&'!)[ 7.786133 7.786133 0.000000 ] xS
80 532.11603 m
90 532.11603 l
S
48.641602 527.11603 m
("!!)[ 7.786133 7.786133 0.000000 ] xS
80 643.22333 m
90 643.22333 l
S
48.641602 638.22333 m
("'!)[ 7.786133 7.786133 0.000000 ] xS
80 754.33057 m
90 754.33057 l
S
48.641602 749.33057 m
(\(!!)[ 7.786133 7.786133 0.000000 ] xS
1 w
80 109.90853 m
85 109.90853 l
S
80 132.12997 m
85 132.12997 l
S
80 154.35143 m
85 154.35143 l
S
80 176.57288 m
85 176.57288 l
S
80 221.01578 m
85 221.01578 l
S
80 243.23723 m
85 243.23723 l
S
80 265.45868 m
85 265.45868 l
S
80 287.68011 m
85 287.68011 l
S
80 332.12302 m
85 332.12302 l
S
80 354.34445 m
85 354.34445 l
S
80 376.56592 m
85 376.56592 l
S
80 398.78735 m
85 398.78735 l
S
80 443.23026 m
85 443.23026 l
S
80 465.45172 m
85 465.45172 l
S
80 487.67316 m
85 487.67316 l
S
80 509.89462 m
85 509.89462 l
S
80 554.33752 m
85 554.33752 l
S
80 576.55896 m
85 576.55896 l
S
80 598.7804 m
85 598.7804 l
S
80 621.00183 m
85 621.00183 l
S
80 665.44476 m
85 665.44476 l
S
80 687.6662 m
85 687.6662 l
S
80 709.88763 m
85 709.88763 l
S
80 732.10907 m
85 732.10907 l
S
80 776.552 m
85 776.552 l
S
Q
1 J
1 j
0.60000002 i
0 sc
q
80 80 1350 710 rc
99.424461 758.57147 m
107.09201 738.39069 l
114.75956 761.93097 l
122.42711 761.1864 l
130.09467 760.30377 l
137.76221 760.78113 l
145.42976 771.06665 l
153.09731 757.78192 l
160.76486 758.8147 l
168.43242 762.23419 l
176.09996 761.13239 l
183.76752 610.24164 l
191.43506 722.8783 l
199.10262 719.1886 l
206.77016 694.11719 l
214.43771 587.34381 l
222.10527 723.0224 l
229.77281 743.46143 l
237.44037 739.60059 l
245.10791 757.34357 l
252.77547 762.57941 l
260.44302 742.909 l
268.11057 675.80072 l
275.77811 677.45795 l
283.44568 673.88232 l
291.11322 767.28687 l
298.78076 728.98175 l
306.4483 765.62665 l
314.11588 718.88239 l
321.78342 741.591 l
329.45096 718.96344 l
337.11853 740.39313 l
344.78607 739.71466 l
352.45361 742.13141 l
360.12115 763.10785 l
367.78873 764.34772 l
375.45627 721.71045 l
383.12381 698.35028 l
390.79138 698.25122 l
398.45892 675.71368 l
406.12646 321.48367 l
413.79401 99.269577 l
421.46158 99.455719 l
429.12912 99.665871 l
436.79666 99.885033 l
444.4642 99.635849 l
452.13177 99.203529 l
459.79932 99.62384 l
467.46686 99.545784 l
475.13443 99.179512 l
482.80197 99.263573 l
490.46951 99.194527 l
498.13705 99.209534 l
505.80463 99.4347 l
513.47217 99.542778 l
521.13971 99.317612 l
528.80725 99.323616 l
536.47479 99.428696 l
544.1424 99.146492 l
551.80994 100.41042 l
559.47748 99.227547 l
567.14502 99.341637 l
574.81256 99.146492 l
582.4801 99.125473 l
590.14764 99.248566 l
597.81525 99.131477 l
605.48279 99.362648 l
613.15033 99.134483 l
620.81787 99.173508 l
628.48541 99.03241 l
636.15295 99.323616 l
643.8205 99.230553 l
651.4881 99.251564 l
659.15564 100.30534 l
666.82318 99.203529 l
674.49072 100.64459 l
682.15826 99.383667 l
689.82581 99.182518 l
697.49335 99.2966 l
705.16095 99.209534 l
712.82849 99.218544 l
720.49603 99.368652 l
728.16357 99.25457 l
735.83112 99.209534 l
743.49866 99.170509 l
751.1662 98.996376 l
758.8338 99.224548 l
766.50134 99.386665 l
774.16888 99.134483 l
781.83643 99.389671 l
789.50397 99.311607 l
797.17151 99.635849 l
804.83905 99.347641 l
812.50665 99.701897 l
820.17419 99.40168 l
827.84174 100.53351 l
835.50928 99.308609 l
843.17682 99.993111 l
850.84436 99.39267 l
858.5119 100.1102 l
866.1795 99.710907 l
873.84705 99.293594 l
881.51459 99.188522 l
889.18213 99.161499 l
896.84967 99.146492 l
904.51721 99.233551 l
912.18475 99.233551 l
919.85236 100.37139 l
927.5199 99.386665 l
935.18744 100.36839 l
942.85498 99.164505 l
950.52252 99.059425 l
958.19006 99.293594 l
965.8576 99.275581 l
973.52521 99.092453 l
981.19275 99.389671 l
988.86029 99.593819 l
996.52783 99.188522 l
1004.1954 99.224548 l
1011.8629 99.206535 l
1019.5305 99.10746 l
1027.198 99.24556 l
1034.8656 99.14949 l
1042.5331 100.20927 l
1050.2007 99.302605 l
1057.8683 99.446709 l
1065.5358 98.933334 l
1073.2034 99.143486 l
1080.8708 99.350639 l
1088.5385 100.12821 l
1096.2059 99.999115 l
1103.8735 99.305603 l
1111.5411 100.03514 l
1119.2086 99.323616 l
1126.8762 100.06216 l
1134.5437 99.155495 l
1142.2113 99.188522 l
1149.8788 100.00512 l
1157.5464 99.227547 l
1165.214 99.374657 l
1172.8815 99.638855 l
1180.5491 99.137482 l
1188.2166 99.215538 l
1195.8842 99.215538 l
1203.5516 99.344635 l
1211.2192 99.338631 l
1218.8868 99.080444 l
1226.5543 100.00512 l
1234.2219 99.416687 l
1241.8894 99.131477 l
1249.557 99.275581 l
1257.2245 100.36539 l
1264.8921 99.020401 l
1272.5597 99.957085 l
1280.2272 99.317612 l
1287.8948 99.269577 l
1295.5623 99.194527 l
1303.2299 99.21254 l
1310.8973 99.10746 l
1318.5649 99.984108 l
1326.2325 99.843002 l
1333.9 99.659866 l
1341.5676 100.45245 l
1349.2351 99.972099 l
1356.9027 99.191521 l
1364.5702 99.284592 l
1372.2378 100.18525 l
1379.9054 99.080444 l
1387.5729 99.389671 l
1395.2405 100.61757 l
1402.908 99.290596 l
1410.5756 99.197525 l
S
Q
2 w
0 J
0 j
0 i
q
0 0 1440 800 rc
80 80 m
1430 80 l
1430 790 l
80 790 l
h
S
ep
end
%%Trailer
%%EOF
